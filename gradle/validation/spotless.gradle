configure(rootProject) {
  ext {
    licenseHeader = rootProject.file('gradle/validation/spotless/license-header.txt')
  }

  tasks.register("tidy") {}
}

allprojects {
  project.apply plugin: deps.plugins.spotless.get().pluginId

  plugins.withType(JavaPlugin) {
    spotless {
      java {
        licenseHeaderFile licenseHeader
        lineEndings 'UNIX'
        endWithNewline()
        googleJavaFormat(deps.versions.googleJavaFormat.get())
      }
    }
  }

  spotless {
    groovyGradle {
      target '*.gradle', 'gradle/**/*.gradle'

      greclipse(deps.versions.greclipse.get()).configFile rootProject.files(
          'gradle/validation/spotless/spotless.eclipseformat.xml',
          'gradle/validation/spotless/spotless.groovyformat.prefs')
    }
  }

  check.dependsOn(spotlessCheck)

  rootProject.tasks.named("tidy").configure { it.dependsOn(spotlessApply) }
}

configure(project(":hppc-template-processor")) {
  plugins.withId("com.diffplug.spotless") {
    spotless {
      java {
        // Exclude ANTLR-generated files.
        targetExclude "build/**"
      }
    }
  }
}

configure(project(":hppc")) {
  plugins.withId("com.diffplug.spotless") {
    spotless {
      java {
        // Exclude templates and generated files, at least for now.
        // Templates have comments around imports, which confuses GOF.
        targetExclude([
          "build/**",
          "src/main/templates/**",
          "src/test/templates/**"
        ])
      }
    }
  }
}
